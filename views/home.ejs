<!DOCTYPE html>
<html >
<head>
    <meta charset="utf-8">
    <link rel="stylesheet" href="/common.css">

      <title>Home</title>
      <script class="u-script" type="text/javascript" src="/javascript/jquery.js" defer=""></script>
      <link rel="stylesheet" href="index.css" media="screen">
      <link data-react-helmet="true" rel="icon" href="/images/smallLogo.png">
      <script class="u-script" type="text/javascript" src="/javascript/websocket.js" defer=""></script>


    <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" name="viewport">
    <script class="u-script" type="text/javascript" src="/javascript/main.js" defer=""></script>

    <meta name="keywords" content="">
    <meta name="description" content="">
    <meta name="robots" content="noindex">


    <meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no,minimal-ui">
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="default">

    <header class="u-clearfix u-header u-header" id="sec-a555"></header>


    <link rel="stylesheet" href="data/preview.uxpincdn.com_styles_preview-79d5a6ab.css">
    

    
    <!-- auto-generated on export -->
    <link rel="stylesheet" href="data/fonts.css">

    
</head>


<body ng-controller="HomeController"
      class="loading" ng-class="{
        'loading' : isLoading,
        'left-panel-active' : isPanelVisible(PREVIEW_PANELS.SITEMAP),
        'sitemap-visible' : isPanelVisible(PREVIEW_PANELS.SITEMAP),
        
      }"
      ng-keydown="keyDown($event)">
    
    <div ui-view="topBar"></div>

    <div ui-view></div>
    <div ui-view="sitemap"></div>
    <div ui-view="documentation"></div>
    <div ui-view="canvas"></div>
    <div ui-view="overlay"></div>
    <div class="loader"></div>
    <div id="footer" class="el-rich-text__content el-rich-text__content--valign-top"></div>
    <script type="text/javascript">
    window.ApplicationConfiguration = {
            awsLambdaExternalRequestUrl: 'https://rvwdyphcfb.execute-api.us-west-1.amazonaws.com/staging/external_request',
            project:{"id_project":8865587,"custom_font_css_url":"https://api.uxpin.com/fonts/custom/css/file?id=1208766","created_at":"2021-06-02T20:19:46+01:00","custom_fonts_url":"https://api.uxpin.com/fonts/custom/css/?id=1208766","features":{"live_share":true,"user_testing":false,"password":true,"team_comments":true,"spec_mode":true,"spec_mode_no_login":true,"spec_mode_styleguide":true,"comments_assignment":true,"design_views":false,"docs":true,"km_track":true,"merge":false},"hash":"1b119f05326d921afb769dcae00433baaf4062e1","id_account":1208766,"is_account_active":true,"is_account_parked":false,"is_account_free":false,"id_collection":2443326,"collection_type":"ONBOARDING_FIRST_PROJECT","collection_status":0,"id_original_project":null,"iteration_name":"","iteration_number":null,"name":"Untitled","settings":{"gridRecent":[{"square":{"color":"rgba(255, 255, 255, 0.08)","size":100,"type":"square","visible":true}}]},"type":"W","updated_at":"2021-06-03T14:07:15+01:00","variables":{}},
            userData:{"is_trial":false,"is_anonymous":true,"is_owner":false},
            mode: 'export',
            menuEnabled:false,
            modeMenuEnabled:false,
        };
         window._rollbarConfig = {};
         window._rollbarInitialized = true;
    </script>

    
        <script type="text/javascript" src="data/preview.uxpincdn.com_scripts_engine-21d40dfb.js"></script>
        <script type="text/javascript" src="data/preview.uxpincdn.com_scripts_vendors-5b712bbd.js"></script>
        <script type="text/javascript" src="data/preview.uxpincdn.com_scripts_app-a38f92c3.js"></script>
        
    

</body>


</html>
<script>
  main();
  async function main(){
    for (var i = 0; i < 100; i++){
      let x = document.getElementsByClassName("ng-element")[13];
      if (x === undefined){await sleep(250); continue;}
      else break
    }
    let buyerbutton = document.getElementsByClassName("ng-element")[13];
    let merchantbutton = document.getElementsByClassName("ng-element")[16];
    buyerbutton.addEventListener('click', function() {
      window.location.href = "/signup-b"
    });
    merchantbutton.addEventListener('click', function() {
      window.location.href = "/signup-m"
    });

    var source = new EventSource('/sse/server-time');

// handle messages

      let footer = $('div[data-id="085db588449a470dad8c959209fe948c"]');
      footer[0].innerHTML = `<%- include('partials/footer.ejs') %>`
      document.getElementById("serverTime").innerHTML = "Cannot reach server at this time";
      document.getElementById("serverTime").style = "color: white; padding-top: 10px; padding-bottom: 20px"

      source.onmessage = function(event) {
        console.log(event.data);
        document.getElementById("serverTime").innerHTML = event.data;
      };
      source.onclose = function (event) {
        console.log(event)
      }
      var p = document.getElementsByTagName("P")[15]
    p.innerHTML = "<a href='https://github.com/Joshua-Zou/coin-tunnel' style='color: #ADCCE9' target='_blank'>Github Repo (src code)</a>"
    p = document.getElementsByTagName("P")[16];
    p.innerHTML = "<a href='https://docs.coin-tunnel.ml' style='color: #ADCCE9' target='_blank'>Docs<a>"
    p = document.getElementsByTagName("P")[17];
    p.innerHTML = "<a href='/tos' target='_blank' style='color: #ADCCE9'>Terms of Service<a>"
    p = document.getElementsByTagName("P")[18];
    p = document.getElementsByTagName("P")[19];
    p.innerHTML = "<a href='/prices' style='color: #ADCCE9' >Coin Prices<a>";
    p = document.getElementsByTagName("P")[20];
    p.innerHTML = `<a href='https://www.producthunt.com/posts/coin-tunnel' style='color: #ADCCE9' target='_blank'>Product Hunt<a> <a href="https://www.producthunt.com/posts/coin-tunnel?utm_source=badge-featured&amp;utm_medium=badge&amp;utm_souce=badge-coin-tunnel" target="_blank"><img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=296546&amp;theme=light" alt="Coin Tunnel - An open source, easy to use crypto payment system. | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54"></a>`
    document.getElementById("sec-a555").innerHTML = `<div class="u-clearfix u-sheet u-sheet-1">
        <a href="/" class="u-image u-logo u-image-1">
          <img src="/images/logo.png" class="u-logo-image u-logo-image-1" data-image-width="109">
        </a>
        <nav class="u-menu u-menu-dropdown u-offcanvas u-menu-1">
          <div class="menu-collapse" style="font-size: 1rem; letter-spacing: 0px;">
            <a class="u-button-style u-custom-left-right-menu-spacing u-custom-padding-bottom u-custom-top-bottom-menu-spacing u-nav-link u-text-active-palette-1-base u-text-hover-palette-2-base" href="#">
              <svg><use xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="#menu-hamburger"></use></svg>
              <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><defs><symbol id="menu-hamburger" viewBox="0 0 16 16" style="width: 16px; height: 16px;"><rect y="1" width="16" height="2"></rect><rect y="7" width="16" height="2"></rect><rect y="13" width="16" height="2"></rect>
</symbol>
</defs></svg>
            </a>
          </div>
          <div class="u-nav-container">
            <ul class="u-nav u-unstyled u-nav-1"><li class="u-nav-item"><a class="u-button-style u-nav-link u-text-active-palette-1-base u-text-hover-palette-2-base" href="/" style="padding: 10px 20px;">Home</a>
</li><li class="u-nav-item"><a class="u-button-style u-nav-link u-text-active-palette-1-base u-text-hover-palette-2-base" onclick="signout()" href="#"style="padding: 10px 20px;">Signout</a>
</li><li class="u-nav-item"><a class="u-button-style u-nav-link u-text-active-palette-1-base u-text-hover-palette-2-base" href="/dashboard-b" style="padding: 10px 20px;">Buyer Sign In</a>
</li><li class="u-nav-item"><a class="u-button-style u-nav-link u-text-active-palette-1-base u-text-hover-palette-2-base" href="/signin-m" style="padding: 10px 20px;">Merchant Sign In</a>
</li><li class="u-nav-item"><a class="u-button-style u-nav-link u-text-active-palette-1-base u-text-hover-palette-2-base" href="/dashboard-b" style="padding: 10px 20px;">Buyer Dashboard</a>
</li><li class="u-nav-item"><a class="u-button-style u-nav-link u-text-active-palette-1-base u-text-hover-palette-2-base" href="/dashboard-m" style="padding: 10px 20px;">Merchant Dashboard</a>
</li></ul>
          </div>
          <div class="u-nav-container-collapse">
            <div class="u-black u-container-style u-inner-container-layout u-opacity u-opacity-95 u-sidenav">
              <div class="u-sidenav-overflow">
                <div class="u-menu-close"></div>
                <ul class="u-align-center u-nav u-popupmenu-items u-unstyled u-nav-2"><li class="u-nav-item"><a class="u-button-style u-nav-link" href="/">Home</a>
</li><li class="u-nav-item"><a class="u-button-style u-nav-link" onclick = "signout()" href="#">Sign Out</a>
</li><li class="u-nav-item"><a class="u-button-style u-nav-link" href="/dashboard-b">Buyer Sign in</a>
</li><li class="u-nav-item"><a class="u-button-style u-nav-link" href="/signin-m">Merchant Sign in</a>
</li><li class="u-nav-item"><a class="u-button-style u-nav-link" href="/dashboard-b">Buyer Dashboard</a>
</li><li class="u-nav-item"><a class="u-button-style u-nav-link" href="/dashboard-m">Merchant Dashboard</a>
</li></ul>
              </div>
            </div>
            <div class="u-black u-menu-overlay u-opacity u-opacity-70"></div>
          </div>
        </nav>
      </div>`
    let r = document.getElementsByClassName("canvas-main-container")[0];
    r.style["margin-top"] = "60px";

    let changingtext = document.getElementsByClassName("el-rich-text__content")[0];
    changingtext.innerHTML = `<div id="container">
	Welcome to <br><div id="text"> </div><div id="border"></div>
</div>
`
changeText();
  }
  function sleep(ms){
        return new Promise(resolve => setTimeout(resolve, ms));
    }

    async function changeText(){
        // List of sentences
var _CONTENT = [ 
	"the next crypto revolution", 
	"the most advanced crypto payment system", 
	"the decentralized web", 
	"the world of cryptocurrency",
    "tax free transactions",
    "anonymous transactions",
    "Coin Tunnel"
];
_CONTENT = shuffle(_CONTENT)
function shuffle(array) {
  var currentIndex = array.length,  randomIndex;

  // While there remain elements to shuffle...
  while (0 !== currentIndex) {

    // Pick a remaining element...
    randomIndex = Math.floor(Math.random() * currentIndex);
    currentIndex--;

    // And swap it with the current element.
    [array[currentIndex], array[randomIndex]] = [
      array[randomIndex], array[currentIndex]];
  }

  return array;
}

// Current sentence being processed
var _PART = 0;

// Character number of the current sentence being processed 
var _PART_INDEX = 0;

// Holds the handle returned from setInterval
var _INTERVAL_VAL;

// Element that holds the text
var _ELEMENT = document.querySelector("#text");

// Cursor element 
var _CURSOR = document.querySelector("#border");

// Implements typing effect
async function Type() { 
	// Get substring with 1 characater added
	var text =  _CONTENT[_PART].substring(0, _PART_INDEX + 1);
	_ELEMENT.innerHTML = text;
	_PART_INDEX++;

	// If full sentence has been displayed then start to delete the sentence after some time
	if(text === _CONTENT[_PART]) {
		// Hide the cursor
    var x = 1000;
    if (text === "Coin Tunnel") x = 4000;
    let randomchance = Math.floor(Math.random() * 2);
    console.log(randomchance)
    if (randomchance === 1){
      return
    }
    //console.log(text)
    
		clearInterval(_INTERVAL_VAL);
		setTimeout(function() {
			_INTERVAL_VAL = setInterval(Delete, 50);
      _CURSOR.style.display = 'none';
		}, x);
	}
}

// Implements deleting effect
function Delete() {
	// Get substring with 1 characater deleted
	var text =  _CONTENT[_PART].substring(0, _PART_INDEX - 1);
	_ELEMENT.innerHTML = text;
	_PART_INDEX--;

	// If sentence has been deleted then start to display the next sentence
	if(text === '') {
		clearInterval(_INTERVAL_VAL);

		// If current sentence was last then display the first one, else move to the next
		if(_PART == (_CONTENT.length - 1))
			_PART = 0;
		else
			_PART++;
		
		_PART_INDEX = 0;

		// Start to display the next sentence after some time
		setTimeout(function() {
			_CURSOR.style.display = 'inline-block';
			_INTERVAL_VAL = setInterval(Type, 100);
		}, 200);
	}
}

// Start the typing effect on load
_INTERVAL_VAL = setInterval(Type, 100);
    }
</script>

<style>
p {
    margin: 0px 0px 0px 0px !important
}

@import url('https://fonts.googleapis.com/css?family=Source+Code+Pro');

#container {
  position: absolute;
  left: 10%;
  font-family: 'Source Code Pro', monospace;  
  font-size: 40px;
  color: rgba(255,255,255,.70);
	letter-spacing: 2px;
}

#text {
  margin-left: 100px;
  font-family: 'Source Code Pro', monospace;  
  font-size: 28px;
	display: inline-block;
	vertical-align: middle;
  color: rgba(255,255,255,.70);
	letter-spacing: 2px;
}


@keyframes animated-cursor{
  from{border-bottom-color: rgba(0,255,0,.75);}
  to{border-bottom-color: transparent;}
}

#border {
  border-bottom: solid 3px rgba(0,255,0,.75);
  margin-top: 10px;
  padding-top: 10px;
  position: relative;
  display: inline-block;
  top: 10px;
  right: -7px;
  width: 20px;
  animation: animated-cursor 600ms steps(30,end) infinite;
}
#footerMain {
  background: none !important;
  
}
</style>